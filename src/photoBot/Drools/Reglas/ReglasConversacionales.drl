package photoBot.Drools.Reglas
 
import photoBot.Drools.*;
import photoBot.Gate.*;
import photoBot.Agentes.Comportamiento.*;
import photoBot.Imagen.*;

 
rule "Encontrar saludo"
	salience 20
	when
        etiqueta : Etiqueta();
        conversacion : Conversacion();
        comportamiento : ComportamientoAgenteConversacionUsuario();
        
        haySaludo : Boolean( haySaludo == false ) from conversacion.isSaludo();
        tipo_s : String (equals("Saludo") == true) from etiqueta.getTipo(); 
    then
        comportamiento.bot_saludar();
        conversacion.saludoRecibido();
end

rule "Solicitud de busqueda de todas las imagenes"
	salience 15
	when
		etiqueta : Etiqueta();
        conversacion : Conversacion();
        comportamiento : ComportamientoAgenteConversacionUsuario();
        
        tipo_b : String (equals("Busqueda") == true) from etiqueta.getTipo();
    then
    	comportamiento.bot_solicitudBuscarTodasImagenes();    
end

rule "Solicitud de subir imagen"
	salience 15
	when
		etiqueta : Etiqueta();
        conversacion : Conversacion();
        comportamiento : ComportamientoAgenteConversacionUsuario();
        
        tipo_b : String (equals("Cargar") == true) from etiqueta.getTipo();
        
    then
    	comportamiento.esperarFotoConversacion();
end

rule "Recibir texto posterior a solicitud de subir imagen"
	salience 20
	when
        conversacion : Conversacion();
        comportamiento : ComportamientoAgenteConversacionUsuario();
        
        solicitudSubirFoto : Boolean( solicitudSubirFoto == true ) from conversacion.isSubirFoto();
        fotosCargadas : Boolean( fotosCargadas == false) from conversacion.isFotosCargadasSubida();
        
    then
    	comportamiento.bot_anularSubidaFotos();
end

rule "Solicitar datos usuario no registrado"
	salience 100
	when
		conversacion : Conversacion();
		comportamiento : ComportamientoAgenteConversacionUsuario();
		
		usuarioRegistrado : Boolean ( usuarioRegistrado == false ) from conversacion.isUsuarioRegistrado();
		esperarDatos : Boolean ( esperarDatos == false ) from conversacion.isEsperarDatosDelUsuario();
		
	then
		comportamiento.bot_pedirDatosUsuarioNuevo(); 

end


rule "Recibir texto posterior a solicitud registro"
	salience 90
	when
		etiqueta1 : Etiqueta();
		etiqueta2 : Etiqueta();

        conversacion : Conversacion();
        comportamiento : ComportamientoAgenteConversacionUsuario();
        
        tipo_numero : String (equals("Numero") == true) from etiqueta1.getTipo();
        tipo_nombre_persona : String (equals("Nombre_persona") == true) from etiqueta2.getTipo();
        
 		usuarioRegistrado : Boolean ( usuarioRegistrado == false ) from conversacion.isUsuarioRegistrado();
 		esperarDatos : Boolean ( esperarDatos == true ) from conversacion.isEsperarDatosDelUsuario();
        
	then
		comportamiento.bot_registrarUsuarioNuevo(etiqueta2, etiqueta1); 

end

        